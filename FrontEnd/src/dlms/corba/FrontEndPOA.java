package dlms.corba;


/**
* dlms/corba/FrontEndPOA.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from dlms.idl
* Wednesday, December 2, 2015 11:17:34 PM EST
*/

public abstract class FrontEndPOA extends org.omg.PortableServer.Servant
 implements dlms.corba.FrontEndOperations, org.omg.CORBA.portable.InvokeHandler
{

  // Constructors

  private static java.util.Hashtable _methods = new java.util.Hashtable ();
  static
  {
    _methods.put ("delayPayment", new java.lang.Integer (0));
    _methods.put ("printCustomerInfo", new java.lang.Integer (1));
    _methods.put ("transferLoan", new java.lang.Integer (2));
    _methods.put ("openAccount", new java.lang.Integer (3));
    _methods.put ("getLoan", new java.lang.Integer (4));
  }

  public org.omg.CORBA.portable.OutputStream _invoke (String $method,
                                org.omg.CORBA.portable.InputStream in,
                                org.omg.CORBA.portable.ResponseHandler $rh)
  {
    org.omg.CORBA.portable.OutputStream out = null;
    java.lang.Integer __method = (java.lang.Integer)_methods.get ($method);
    if (__method == null)
      throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);

    switch (__method.intValue ())
    {
       case 0:  // dlms/corba/FrontEnd/delayPayment
       {
         try {
           String bankId = in.read_string ();
           int loanId = in.read_long ();
           String currentDueDate = in.read_string ();
           String newDueDate = in.read_string ();
           boolean $result = false;
           $result = this.delayPayment (bankId, loanId, currentDueDate, newDueDate);
           out = $rh.createReply();
           out.write_boolean ($result);
         } catch (dlms.corba.AppException $ex) {
           out = $rh.createExceptionReply ();
           dlms.corba.AppExceptionHelper.write (out, $ex);
         }
         break;
       }

       case 1:  // dlms/corba/FrontEnd/printCustomerInfo
       {
         try {
           String bankId = in.read_string ();
           String $result = null;
           $result = this.printCustomerInfo (bankId);
           out = $rh.createReply();
           out.write_string ($result);
         } catch (dlms.corba.AppException $ex) {
           out = $rh.createExceptionReply ();
           dlms.corba.AppExceptionHelper.write (out, $ex);
         }
         break;
       }

       case 2:  // dlms/corba/FrontEnd/transferLoan
       {
         try {
           String bankId = in.read_string ();
           int loanId = in.read_long ();
           String currentBankId = in.read_string ();
           String otherBankId = in.read_string ();
           int $result = (int)0;
           $result = this.transferLoan (bankId, loanId, currentBankId, otherBankId);
           out = $rh.createReply();
           out.write_long ($result);
         } catch (dlms.corba.AppException $ex) {
           out = $rh.createExceptionReply ();
           dlms.corba.AppExceptionHelper.write (out, $ex);
         }
         break;
       }

       case 3:  // dlms/corba/FrontEnd/openAccount
       {
         try {
           String bankId = in.read_string ();
           String firstName = in.read_string ();
           String lastName = in.read_string ();
           String emailAddress = in.read_string ();
           String phoneNumber = in.read_string ();
           String password = in.read_string ();
           int $result = (int)0;
           $result = this.openAccount (bankId, firstName, lastName, emailAddress, phoneNumber, password);
           out = $rh.createReply();
           out.write_long ($result);
         } catch (dlms.corba.AppException $ex) {
           out = $rh.createExceptionReply ();
           dlms.corba.AppExceptionHelper.write (out, $ex);
         }
         break;
       }

       case 4:  // dlms/corba/FrontEnd/getLoan
       {
         try {
           String bankId = in.read_string ();
           int accountNbr = in.read_long ();
           String password = in.read_string ();
           int loanAmount = in.read_long ();
           int $result = (int)0;
           $result = this.getLoan (bankId, accountNbr, password, loanAmount);
           out = $rh.createReply();
           out.write_long ($result);
         } catch (dlms.corba.AppException $ex) {
           out = $rh.createExceptionReply ();
           dlms.corba.AppExceptionHelper.write (out, $ex);
         }
         break;
       }

       default:
         throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);
    }

    return out;
  } // _invoke

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:dlms/corba/FrontEnd:1.0"};

  public String[] _all_interfaces (org.omg.PortableServer.POA poa, byte[] objectId)
  {
    return (String[])__ids.clone ();
  }

  public FrontEnd _this() 
  {
    return FrontEndHelper.narrow(
    super._this_object());
  }

  public FrontEnd _this(org.omg.CORBA.ORB orb) 
  {
    return FrontEndHelper.narrow(
    super._this_object(orb));
  }


} // class FrontEndPOA
